name: JimCarry CI

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main  # main 브랜치로 PR이 생성될 때 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소에서 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # mvnw 파일에 실행 권한 부여
      - name: Give execute permission to mvnw
        run: chmod +x ./JimCarry/mvnw
        
      # 2. Java JDK 설정
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17  # 사용하는 Java 버전
          distribution: temurin

     # 3. Maven Wrapper 사용하여 빌드 (./mvnw는 Maven Wrapper 스크립트)
      - name: Build with Maven Wrapper
        run: ./mvnw clean package -DskipTests
        working-directory: ./JimCarry  # mvnw 파일이 있는 디렉토리로 경로 설정
        
      # 4. 테스트 실행
      #- name: Run tests
       #run: ./mvnw test
       #working-directory: ./JimCarry  # mvnw 파일이 있는 디렉토리로 경로 설정
      #5. 서버에 배포 (서버가 준비된 상태에서 SSH를 통해 배포)
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SERVER_IP }}   # 서버 IP 주소
          username: ${{ secrets.SERVER_USER }}  # 서버 사용자 이름
          key: ${{ secrets.PRIVATE_KEY }}  # SSH 개인 키 (GitHub Secrets에 저장)
          port: 22  # SSH 포트 (기본값 22)
          script: |
            echo "Stopping existing Spring Boot application..."
            pkill -f 'java -jar' || true 
            cd /root/jimcarry  
            rm -rf * 
            mv /path/to/github/actions/artifact/*.jar app.jar
            nohup java -jar app.jar &  
